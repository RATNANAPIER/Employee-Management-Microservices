spring.application.name=API-GATEWAY
server.port=9191

#configure eureka service url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

spring.zipkin.base-url = http://127.0.0.1:9411/
management.endpoint.web.exposure.include=*

management.tracing.enabled=true
management.tracing.sampling.probability=1.0

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

#Routes for Employee Service
#Routes for Department Service
#To Configure routes automatically for microservices registered in Service-registry {eureka server} we need to enable discovery.
#spring.cloud.gateway.server.webflux.discovery.locator.enabled=true

#It converts the upper case service-id into lowerCase service-id during routing
#spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

#Enable  logging for api-Gateway projects so that we can see mapping routes
#logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG
#using the above property we need to and microservices name into url manually example http://localhost:9191/employee-service/api/employees/2
# instead http://localhost:9191/api/employees/2 , so we go with manual route information





#Routes for Employee Service
#configure URI for these routes, we use {lb} because api-gateway supports load balancing. we can also use uri, but it will stick to only particular port which is not flexible
#configure REST API paths
spring.cloud.gateway.server.webflux.routes[0].id=EMPLOYEE-SERVICE
spring.cloud.gateway.server.webflux.routes[0].uri=lb://EMPLOYEE-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/employees/**

##Routes for Department Service
##configure URI for these routes, we use {lb} because api-gateway supports load balancing. we can also use uri, but it will stick to only particular port which is not flexible
spring.cloud.gateway.server.webflux.routes[1].id=DEPARTMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[1].uri=lb://DEPARTMENT-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/departments/**

##Routes for organization Service
##configure URI for these routes, we use {lb} because api-gateway supports load balancing. we can also use uri, but it will stick to only particular port which is not flexible
spring.cloud.gateway.server.webflux.routes[2].id=ORGANIZATION-SERVICE
spring.cloud.gateway.server.webflux.routes[2].uri=lb://ORGANIZATION-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/organizations/**


spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-methods=GET,POST,PUT,DELETE