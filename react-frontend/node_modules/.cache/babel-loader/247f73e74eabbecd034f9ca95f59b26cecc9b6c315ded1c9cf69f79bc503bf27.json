{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ratna\\\\OneDrive\\\\Desktop\\\\Springboot\\\\Projects\\\\Microservices\\\\react-frontend\\\\src\\\\component\\\\EmployeeComponent.js\";\n//This react component displays the User, Department, Organization details\nimport React, { Component } from \"react\";\nimport EmployeeService from \"../service/EmployeeService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EmployeeComponent extends Component {\n  //constructor to initialize component state value\n  //props===> It is plain javaScript Object it get passed to the component, like parent to child component\n  constructor(props) {\n    super(props);\n\n    //To define objects\n    //Below object are initialized Empty\n    //State object is plain javaScript Object, managed within the component\n    this.state = {\n      employee: {},\n      department: {},\n      organization: {}\n    };\n  }\n\n  //Calling the Component life cycle method, within this method we are going to make the REST API Call\n  //This method is called when Component gets mounted\n  componentDidMount() {\n    // EmployeeService.getEmployee().then((response) => {\n    //   this.setState({ employee: response.data.employee });\n    //   this.setState({ department: response.data.department });\n    //   this.setState({ organization: response.data.organization });\n    //   //To print the Objects\n    //   console.log(this.state.employee);\n    //   console.log(this.state.department);\n    //   console.log(this.state.organization);\n    //});\n    EmployeeService.getEmployee().then(response => {\n      const {\n        employee,\n        department,\n        organization\n      } = response.data;\n\n      // Log the raw response directly\n      console.log(\"Employee snapshot:\", employee);\n      console.log(\"Department snapshot:\", department);\n      console.log(\"Organization snapshot:\", organization);\n\n      // Set state in one call\n      this.setState({\n        employee,\n        department,\n        organization\n      }, () => {\n        // This runs AFTER state has been updated\n        console.log(\"Employee:\", this.state.employee);\n        console.log(\"Department:\", this.state.department);\n        console.log(\"Organization:\", this.state.organization);\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default EmployeeComponent;","map":{"version":3,"names":["React","Component","EmployeeService","jsxDEV","_jsxDEV","EmployeeComponent","constructor","props","state","employee","department","organization","componentDidMount","getEmployee","then","response","data","console","log","setState","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ratna/OneDrive/Desktop/Springboot/Projects/Microservices/react-frontend/src/component/EmployeeComponent.js"],"sourcesContent":["//This react component displays the User, Department, Organization details\r\nimport React, { Component } from \"react\";\r\nimport EmployeeService from \"../service/EmployeeService\";\r\n\r\nclass EmployeeComponent extends Component {\r\n  //constructor to initialize component state value\r\n  //props===> It is plain javaScript Object it get passed to the component, like parent to child component\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //To define objects\r\n    //Below object are initialized Empty\r\n    //State object is plain javaScript Object, managed within the component\r\n    this.state = {\r\n      employee: {},\r\n      department: {},\r\n      organization: {},\r\n    };\r\n  }\r\n\r\n  //Calling the Component life cycle method, within this method we are going to make the REST API Call\r\n  //This method is called when Component gets mounted\r\n  componentDidMount() {\r\n    // EmployeeService.getEmployee().then((response) => {\r\n    //   this.setState({ employee: response.data.employee });\r\n    //   this.setState({ department: response.data.department });\r\n    //   this.setState({ organization: response.data.organization });\r\n    //   //To print the Objects\r\n    //   console.log(this.state.employee);\r\n    //   console.log(this.state.department);\r\n    //   console.log(this.state.organization);\r\n    //});\r\n    EmployeeService.getEmployee().then((response) => {\r\n      const { employee, department, organization } = response.data;\r\n\r\n      // Log the raw response directly\r\n      console.log(\"Employee snapshot:\", employee);\r\n      console.log(\"Department snapshot:\", department);\r\n      console.log(\"Organization snapshot:\", organization);\r\n\r\n      // Set state in one call\r\n      this.setState({ employee, department, organization }, () => {\r\n        // This runs AFTER state has been updated\r\n        console.log(\"Employee:\", this.state.employee);\r\n        console.log(\"Department:\", this.state.department);\r\n        console.log(\"Organization:\", this.state.organization);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default EmployeeComponent;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,iBAAiB,SAASJ,SAAS,CAAC;EACxC;EACA;EACAK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,CAAC,CAAC;MACZC,UAAU,EAAE,CAAC,CAAC;MACdC,YAAY,EAAE,CAAC;IACjB,CAAC;EACH;;EAEA;EACA;EACAC,iBAAiBA,CAAA,EAAG;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAV,eAAe,CAACW,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC/C,MAAM;QAAEN,QAAQ;QAAEC,UAAU;QAAEC;MAAa,CAAC,GAAGI,QAAQ,CAACC,IAAI;;MAE5D;MACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAET,QAAQ,CAAC;MAC3CQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAER,UAAU,CAAC;MAC/CO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,YAAY,CAAC;;MAEnD;MACA,IAAI,CAACQ,QAAQ,CAAC;QAAEV,QAAQ;QAAEC,UAAU;QAAEC;MAAa,CAAC,EAAE,MAAM;QAC1D;QACAM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACV,KAAK,CAACC,QAAQ,CAAC;QAC7CQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACV,KAAK,CAACE,UAAU,CAAC;QACjDO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACV,KAAK,CAACG,YAAY,CAAC;MACvD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAS,MAAMA,CAAA,EAAG;IACP,oBAAOhB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EACpB;AACF;AAEA,eAAenB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}